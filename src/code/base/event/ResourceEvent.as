/* *      _________  __      __ *    _/        / / /____ / /________ ____ ____  ___ *   _/        / / __/ -_) __/ __/ _ `/ _ `/ _ \/ _ \ *  _/________/  \__/\__/\__/_/  \_,_/\_, /\___/_//_/ *                                   /___/ *  * tetragon : Engine for Flash-based web and desktop games. * Licensed under the MIT License. *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package base.event{	import base.io.resource.ResourceBulkFile;	import flash.events.Event;			/**	 * A ResourceEvent is an Event used by a Resource to dispatch load status information. In	 * common use, this event never needs to be used as the ResourceManager wraps its	 * functionality.	 */	public class ResourceEvent extends Event	{		//-----------------------------------------------------------------------------------------		// Constants		//-----------------------------------------------------------------------------------------				public static const LOADED:String =			"resourceLoaded";		public static const FAILED:String =			"resourceFailed";				public static const INIT_SUCCESS:String =	"resourceInitSuccess";		public static const INIT_FAILED:String =	"resourceInitFailed";		public static const FILE_FAILED:String =	"resourceFileFailed";		public static const FILE_LOADED:String =	"resourceFileLoaded";		public static const BULK_LOADED:String =	"resourceBulkLoaded";						//-----------------------------------------------------------------------------------------		// Properties		//-----------------------------------------------------------------------------------------				/** @private */		protected var _bulkFile:ResourceBulkFile;		/** @private */		protected var _text:String;
				//-----------------------------------------------------------------------------------------		// Public Methods		//-----------------------------------------------------------------------------------------				/**		 * Creates a new ResourceEvent instance.		 */		public function ResourceEvent(type:String, bulkFile:ResourceBulkFile = null, text:String = null)		{			super(type, false, false);			_bulkFile = bulkFile;			_text = text;		}						/**		 * Clones the event.		 */		override public function clone():Event		{			return new ResourceEvent(type, _bulkFile, _text);		}						//-----------------------------------------------------------------------------------------		// Getters & Setters		//-----------------------------------------------------------------------------------------				public function get bulkFile():ResourceBulkFile		{			return _bulkFile;		}						/**		 * Text message of error in case the resource failed to load.		 */		public function get text():String		{			return _text;		}	}}